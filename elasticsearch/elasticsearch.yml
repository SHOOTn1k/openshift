apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: Elasticsearch and kibana persistent template
    tags: elasticsearch,logs,kibana
  creationTimestamp: null
  name: elasticsearch-persistent
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${ELASTIC_NAME_PREFIX}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${ELASTIC_VOLUME_CAPACITY}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${KIBANA_NAME_PREFIX}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${KIBANA_VOLUME_CAPACITY}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${ELASTIC_NAME_PREFIX}
  spec:
    replicas: 1
    selector:
      app: ${ELASTIC_NAME_PREFIX}
      deploymentconfig: ${ELASTIC_NAME_PREFIX}
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: template
        labels:
          app: ${ELASTIC_NAME_PREFIX}
          deploymentconfig: ${ELASTIC_NAME_PREFIX}
      spec:
        containers:
        - image: bitnami/elasticsearch:7.9.0
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
          - containerPort: 9200
            protocol: TCP
          - containerPort: 9300
            protocol: TCP
          volumeMounts:
          - mountPath: /bitnami/elasticsearch/data
            name: ${ELASTIC_NAME_PREFIX}-data
        volumes:
        - name: ${ELASTIC_NAME_PREFIX}-data
          persistentVolumeClaim:
            claimName: ${ELASTIC_NAME_PREFIX}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: elasticsearch
    name: elasticsearch
  spec:
    clusterIP: None
    ports:
    - name: data
      port: 9200
    - name: transport
      port: 9300
    selector:
      app: ${ELASTIC_NAME_PREFIX}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${KIBANA_NAME_PREFIX}
    name: ${KIBANA_NAME_PREFIX}
  spec:
    replicas: 1
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate    
    selector:
      app: ${KIBANA_NAME_PREFIX}
      deploymentconfig: ${KIBANA_NAME_PREFIX}
    template:
      metadata:
        labels:
          app: ${KIBANA_NAME_PREFIX}
          deploymentconfig: ${KIBANA_NAME_PREFIX}
      spec:
        containers:
          - image: bitnami/kibana:7.9.0
            imagePullPolicy: IfNotPresent
            name: kibana
            ports:
              - containerPort: 5601
                protocol: TCP
            volumeMounts:
            - mountPath: /bitnami
              name: ${KIBANA_NAME_PREFIX}-data
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${KIBANA_NAME_PREFIX}-data
          persistentVolumeClaim:
            claimName: ${KIBANA_NAME_PREFIX}
    triggers:
      - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: ${KIBANA_NAME_PREFIX}
    name: ${KIBANA_NAME_PREFIX}
  spec:
    ports:
      - name: tcp
        port: 5601
        protocol: TCP
        targetPort: 5601
    selector:
      app: ${KIBANA_NAME_PREFIX}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
- description: Name prefix for each elastic-related object created
  name: ELASTIC_NAME_PREFIX
  required: true
  value: elasticsearch
- description: Name prefix for each kibana-related object created
  name: KIBANA_NAME_PREFIX
  required: true
  value: kibana
- description: Capacity for Elasticsearch's PVC
  name: ELASTIC_VOLUME_CAPACITY
  required: true
  value: 10Gi
- description: Capacity for Kibana's PVC
  name: KIBANA_VOLUME_CAPACITY
  required: true
  value: 10Gi
